// Code generated by cloudformation/generators/sweepers/main.go; DO NOT EDIT.

package aws

import (
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/service/cloudformation"
	"github.com/hashicorp/go-multierror"
	"github.com/terraform-providers/terraform-provider-aws/aws/internal/service/cloudformation/lister"
)

func testSweepCloudformationStackSets(region string) error {
	conn, err := sharedCloudformationClientForRegion(region)
	if err != nil {
		return err
	}

	var sweeperErrs *multierror.Error

	err = lister.ListAllStackSetsPages(conn, func(page *cloudformation.ListStackSetsOutput, lastPage bool) bool {
		if page == nil {
			return !lastPage
		}

		for _, r := range page.Summaries {
			name := aws.StringValue(r.StackSetName)

			log.Printf("[INFO] Deleting Cloudformation StackSet: %s", name)
			err := deleteCloudformationStackSet(conn, deleteCloudformationStackSetInputFromAPIResource(r))
			if err != nil {
				sweeperErrs = multierror.Append(sweeperErrs, fmt.Errorf("error deleting Cloudformation StackSet (%s): %w", name, err))
				continue
			}
		}

		return !lastPage
	})

	if testSweepSkipSweepError(err) {
		log.Printf("[WARN] Skipping Cloudformation StackSet sweeper for %q: %s", region, err)
		return sweeperErrs.ErrorOrNil() // In case we have completed some pages, but had errors
	}

	if err != nil {
		sweeperErrs = multierror.Append(sweeperErrs, fmt.Errorf("error listing Cloudformation StackSets: %w", err))
	}

	return sweeperErrs.ErrorOrNil()
}
